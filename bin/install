#!/usr/bin/env bash

#set -eu -o pipefail

get_platform() {
    local platform="$(uname | tr '[:upper:]' '[:lower:]')"

    case "$platform" in
        linux|darwin)
            echo "Platform '${platform}' supported!" >&2
            ;;
        *)
            echo "Platform '${platform}' not supported!" >&2
            exit 1
            ;;
    esac

    echo -n $platform
}

get_arch() {
    local arch=""

    case "$(uname -m)" in
        x86_64|amd64) arch="amd64"; ;;
        i686|i386) arch="386"; ;;
        arm64) arch="arm64"; ;;
        aarch64) arch="arm64"; ;;
        *)
            echo "Arch '$(uname -m)' not supported" >&2
            exit 1
            ;;
    esac

    echo -n $arch
}

get_url() {
  local version=$1
  local file=$2
#  echo -n "https://github.com/kyoh86/cook/releases/download/v${version}/${file}"
  echo -n "https://github.com/glitchedgitz/cook/archive/v${version}.tar.gz"
}

install_cook() {
    local version=$2
    local install_path=$3/bin
    local bin_path=$install_path
    local platform=$(get_platform)
    local arch=$(get_arch)
    # handy for testing
    if [ -z "${TEMPDIR-}" ]; then
      local tmpd=$(mktemp -d)
    else
      local tmpd=$TEMPDIR
    fi

    local tgz_name=cook_${version}_${platform}_${arch}.tar.gz
    local tgz_url="$(get_url $version $tgz_name)"
    curl -Lo $tmpd/$tgz_name $tgz_url
    pushd $tmpd > /dev/null
    tar xzf $tgz_name
    echo "XHEREEE : `pwd`"
    chmod +x cook-${version}
    echo "=================================================" >&2
    echo "${install_path}" >&2
    echo "=================================================" >&2
    mkdir -p $install_path
    cd cook-${version}
    cd `find . -name "cmd" -type d`/cook
    go build -o $bin_path/
    #mv cook-${version}/V2/cmd/cook $bin_path
    popd > /dev/null
}

install_cook $ASDF_INSTALL_TYPE $ASDF_INSTALL_VERSION $ASDF_INSTALL_PATH

